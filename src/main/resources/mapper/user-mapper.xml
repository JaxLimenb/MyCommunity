<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.mycommunity.dao.UserMapper">
    
    <!--  将一样sql语句统一写在这，方便复用  -->
    <sql id="selectAllFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>
    <sql id="insertUser">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>
    
    <!--
    id写对应接口中的方法名
    resultType为查找结果返回类型，这里可以不写路径，因为在配置文件中已经写好了(MycommunityApplication)
    -->
    <select id="selectById" resultType="com.nowcoder.mycommunity.entity.User">
        SELECT id, username, password, salt, email, type, status, activation_code, header_url, create_time
        FROM user
        WHERE id = #{id}
    </select>
    <select id="selectByName" resultType="User">
        SELECT <include refid="selectAllFields"></include>
        FROM user
        WHERE username = #{username}
    </select>
    <select id="selectByEmail" resultType="User">
        SELECT <include refid="selectAllFields"></include>
        FROM user
        WHERE email = #{email}
    </select>
    
    <!--  keyProperty指明主键的字段是哪个成员变量  -->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        INSERT INTO user (<include refid="insertUser"></include>)
        VALUES (#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime})
    </insert>

    <update id="updateStatus">
        UPDATE user SET status = #{status}
        WHERE id = #{id}
    </update>
    <update id="updateHeader">
        UPDATE user SET header_url = #{headerUrl}
        WHERE id = #{id}
    </update>
    <update id="updatePassword">
        UPDATE user SET password = #{password}
        WHERE id = #{id}
    </update>


</mapper>